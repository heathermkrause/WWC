% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_survey_continuous.R
\name{simulate_survey_continuous}
\alias{simulate_survey_continuous}
\title{Simulate a single survey to a question with a continuous numerical answer 
according to inputs}
\usage{
simulate_survey_continuous(prop_sex, lambda_sex, prop_raceethnicity,
  lambda_raceethnicity, prop_age, lambda_age, prop_education, lambda_education,
  n = 1000)
}
\arguments{
\item{prop_sex}{Numeric vector specifying the gender characteristics of the
survey respondents as proportions in the order male, then female, for
example, \code{c(0.49, 0.51)}. Must sum to 1, i.e., all respondents fall into
one of these gender bins.}

\item{lambda_sex}{Numeric vector specifying lambda (Poisson distribution) 
for the survey respondents by sex in the order male, then female, for 
example, \code{c(25, 75)}.}

\item{prop_raceethnicity}{Numeric vector specifying the racial/ethnic 
characteristics of the survey respondendents as proportions in the order
white alone, Hispanic or Latino, black alone, Asian alone, and other, 
for example, \code{c(0.6, 0.22, 0.11, 0.05, 0.02)}. Must sum to 1, i.e., all
respondents fall into one of these racial/ethnic bins.}

\item{lambda_raceethnicity}{Numeric vector specifying lambda for the 
survey respondents by race/ethnicity in the same order as 
\code{prop_raceethnicity}, for example, \code{c(90, 10, 50, 50, 50)}.}

\item{prop_age}{Numeric vector specifying the age characteristics of the
survey respondents as proportions in the following bins: under 5 years, 5 to 
9 years, 10 to 14 years, 15 to 17 years, 18 and 19 years, 20 to 24 years, 25 
to 29 years, 30 to 34 years, 35 to 44 years, 45 to 54 years, 55 to 64 years, 
65 to 74 years, 75 to 84 years, 85 years and over, for example, \code{c(0, 
0, 0, 0.05, 0.1, 0.1, 0.12, 0.13, 0.12, 0.11, 0.1, 0.1, 0.05, 0.02)}. Must
sum to 1, i.e., all respondents must fall into one of these age bins.}

\item{lambda_age}{Numeric vector specifying lambda for survey respondents 
by age in the same order bins as \code{prop_age}, for example, 
\code{c(50, 50, 50, 50, 50, 50, 50, 55, 55, 55, 65, 75, 85, 95)}.}

\item{prop_education}{Numeric vector specifying the educational attainment
of the survey respondents as proportions in the following bins: less than 
high school diploma, high school graduate (includes equivalency), some 
college or associate's degree, bachelor's degree or higher, for example,
\code{c(0.1, 0.2, 0.4, 0.3)}. Must sum to 1, i.e., all respondents must fall
into one of these educational attainment bins.}

\item{lambda_education}{Numeric vector specifying lambda for the survey 
respondents by educational attainment in the same order bins as 
\code{prop_education}, for example, \code{c(20, 40, 60, 80)}.}

\item{n}{Number of respondents in the survey (default is 1000)}
}
\description{
Simulate a single survey to a question with a continuous numerical answer 
according to inputs
}
\details{
The numerical value for each survey respondent is simulated using
the Poisson distribution. The \code{lambda} value for each respondent is
calculated by taking the mean of \code{lambda} for that respondent's sex,
race/ethnicity, etc.
}
\examples{

# prop_sex specifies how many men/women are in the survey
# in this example, the survey is 48\% men and 52\% women
prop_sex <- c(0.48, 0.52)
# lambda_sex specifies the response weights of men/women
# in this example, women have a higher mean response than men
lambda_sex <- c(25, 75)
prop_raceethnicity <- c(0.55, 0.25, 0.1, 0.05, 0.05)
lambda_raceethnicity <- c(90, 10, 50, 50, 50)
prop_age <- c(0, 0, 0, 0.04, 0.1, 0.1, 0.12, 0.13, 0.12, 0.11, 0.11, 0.09, 0.06, 0.02)
lambda_age <- c(50, 50, 50, 50, 50, 50, 50, 55, 55, 60, 65, 70, 75, 80)
prop_education <- c(0.1, 0.3, 0.4, 0.2)
lambda_education <- c(20, 40, 60, 80)
mysurvey <- simulate_survey_continuous(prop_sex, lambda_sex,
                                     prop_raceethnicity, lambda_raceethnicity,
                                     prop_age, lambda_age,
                                     prop_education, lambda_education,
                                     n = 900)

}

